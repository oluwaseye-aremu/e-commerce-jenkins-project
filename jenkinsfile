pipeline {
    agent any

    environment {
        DOCKERHUB_USER = 'oluwaloseye'
        IMAGE_NAME = 'zay_shop_site'
        PORT = '8085'
    }

    triggers {
        // Automatically run pipeline when code is pushed to GitHub
        githubPush()
    }

    stages {

        stage('Checkout') {
            steps {
                echo "üì¶ Checking out latest code from GitHub..."
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "‚öôÔ∏è Building new Docker image..."
                sh 'docker build -t $IMAGE_NAME .'
            }
        }

        stage('Tag Docker Image') {
            steps {
                echo "üè∑Ô∏è Tagging image for Docker Hub..."
                sh 'docker tag $IMAGE_NAME $DOCKERHUB_USER/$IMAGE_NAME:latest'
            }
        }

        stage('Login to Docker Hub') {
            steps {
                echo "üîê Logging into Docker Hub..."
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                echo "üöÄ Pushing image to Docker Hub..."
                sh 'docker push $DOCKERHUB_USER/$IMAGE_NAME:latest'
            }
        }

        stage('Deploy New Container') {
            steps {
                echo "üö¢ Deploying new version of the container..."
                sh '''
                    # Stop and remove any running instance
                    docker stop $IMAGE_NAME || true
                    docker rm $IMAGE_NAME || true

                    # Run the new container on the specified port
                    docker run -d -p $PORT:$PORT --name $IMAGE_NAME $DOCKERHUB_USER/$IMAGE_NAME:latest
                '''
            }
        }
    }

    post {
        success {
            echo "‚úÖ Deployment complete! Visit: http://192.168.1.49:$PORT"
        }
        failure {
            echo "‚ùå Pipeline failed. Check Jenkins console logs for details."
        }
    }
}
